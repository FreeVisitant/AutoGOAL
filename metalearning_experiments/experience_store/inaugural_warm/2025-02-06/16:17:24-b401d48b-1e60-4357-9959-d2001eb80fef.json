{
    "algorithms": [
        {
            "TruncatedSVD": {
                "n_components": {
                    "value": 100
                },
                "algorithm": {
                    "value": "randomized"
                },
                "n_iter": {
                    "value": 1
                },
                "tol": {
                    "value": -0.992
                }
            }
        },
        {
            "KBinsDiscretizer": {
                "n_bins": {
                    "value": 8
                },
                "encode": {
                    "value": "onehot"
                },
                "strategy": {
                    "value": "quantile"
                }
            }
        },
        {
            "KNeighborsClassifier": {
                "n_neighbors": {
                    "value": 1
                },
                "weights": {
                    "value": "distance"
                },
                "algorithm": {
                    "value": "kd_tree"
                },
                "leaf_size": {
                    "value": 1
                },
                "p": {
                    "value": 1
                },
                "metric": {
                    "value": "nan_euclidean"
                }
            }
        }
    ],
    "dataset_features": [
        59.0,
        2.0,
        0.9981341772155725,
        0.4745762711864407,
        0.5254237288135594,
        0.9032258064516129,
        13682.64406779661,
        8137.616824671501,
        0.5947400797937986,
        0.8666666666666668
    ],
    "system_features": [],
    "dataset_feature_extractor_name": "TextClassificationFeatureExtractor",
    "system_feature_extractor_name": "NoSystem",
    "timestamp": "2025-02-06 16:17:24",
    "alias": "inaugural_warm",
    "accuracy": null,
    "cross_val_steps": null,
    "f1": null,
    "evaluation_time": null,
    "error": "Metric 'nan_euclidean' not valid. Use sorted(sklearn.neighbors.VALID_METRICS['kd_tree']) to get valid options. Metric can also be a callable function."
}