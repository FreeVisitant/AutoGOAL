domain,n_samples,n_features,n_classes,random_state,search_iters,best_score,time_seconds,best_pipeline
brown,500,3000,15,0,10,0.5486111111111112,335.69,"Pipeline(
    algorithms=[
        SplineTransformer(
            degree=1,
            extrapolation=""linear"",
            include_bias=True,
            knots=""uniform"",
            n_knots=2,
            order=""c"",
        ),
        SVC(
            C=9.991,
            break_ties=False,
            cache_size=1,
            coef0=0.992,
            decision_function_shape=""ovr"",
            degree=1,
            gamma=""scale"",
            probability=True,
            shrinking=False,
        ),
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,50,0.5486111111111112,336.64,"Pipeline(
    algorithms=[
        SplineTransformer(
            degree=1,
            extrapolation=""linear"",
            include_bias=True,
            knots=""uniform"",
            n_knots=2,
            order=""c"",
        ),
        SVC(
            C=9.991,
            break_ties=False,
            cache_size=1,
            coef0=0.992,
            decision_function_shape=""ovr"",
            degree=1,
            gamma=""scale"",
            probability=True,
            shrinking=False,
        ),
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,10,0.5486111111111112,368.50,"Pipeline(
    algorithms=[
        LogisticRegression(
            C=0.005, fit_intercept=True, multi_class=""auto"", penalty=""none""
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,50,0.5486111111111112,377.53,"Pipeline(
    algorithms=[
        LogisticRegression(
            C=0.005, fit_intercept=True, multi_class=""auto"", penalty=""none""
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,10,0.5069444444444444,304.75,"Pipeline(
    algorithms=[
        KBinsDiscretizer(encode=""ordinal"", n_bins=9, strategy=""quantile""),
        LinearSVC(
            C=9.991,
            dual=False,
            fit_intercept=False,
            loss=""squared_hinge"",
            multi_class=""crammer_singer"",
            penalty=""l2"",
        ),
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,50,0.3680555555555556,305.48,"Pipeline(
    algorithms=[ComplementNB(fit_prior=True, norm=True)],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,10,0.4305555555555556,301.83,"Pipeline(
    algorithms=[
        KNeighborsClassifier(
            algorithm=""brute"",
            leaf_size=1,
            metric=""cosine"",
            n_neighbors=9,
            p=3,
            weights=""distance"",
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,50,0.4305555555555556,325.38,"Pipeline(
    algorithms=[
        KNeighborsClassifier(
            algorithm=""brute"",
            leaf_size=1,
            metric=""cosine"",
            n_neighbors=9,
            p=3,
            weights=""distance"",
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,10,0.4791666666666667,307.83,"Pipeline(
    algorithms=[
        SVC(
            C=2.3011653017716545,
            break_ties=False,
            cache_size=1,
            coef0=-0.992,
            decision_function_shape=""ovr"",
            degree=1,
            gamma=""scale"",
            probability=True,
            shrinking=True,
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,50,0.4791666666666667,353.61,"Pipeline(
    algorithms=[
        SVC(
            C=2.3011653017716545,
            break_ties=False,
            cache_size=1,
            coef0=-0.992,
            decision_function_shape=""ovr"",
            degree=1,
            gamma=""scale"",
            probability=True,
            shrinking=True,
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,10,0.5069444444444444,344.38,"Pipeline(
    algorithms=[
        LogisticRegression(
            C=9.991, fit_intercept=True, multi_class=""multinomial"", penalty=""l2""
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,0,50,0.5069444444444444,340.18,"Pipeline(
    algorithms=[
        LogisticRegression(
            C=9.991, fit_intercept=True, multi_class=""multinomial"", penalty=""l2""
        )
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,10,0.5069444444444444,359.08,"Pipeline(
    algorithms=[
        SplineTransformer(
            degree=4,
            extrapolation=""constant"",
            include_bias=True,
            knots=""quantile"",
            n_knots=2,
            order=""f"",
        ),
        NearestCentroid(),
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
brown,500,3000,15,1,50,0.5069444444444444,353.91,"Pipeline(
    algorithms=[
        SplineTransformer(
            degree=4,
            extrapolation=""constant"",
            include_bias=True,
            knots=""quantile"",
            n_knots=2,
            order=""f"",
        ),
        NearestCentroid(),
    ],
    input_types=(
        Tensor[2, Continuous, Dense],
        Supervised[Tensor[1, Categorical, Dense]],
    ),
)"
